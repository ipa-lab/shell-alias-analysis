TODO:
- download database and play with queries @done
- look over JÃ¼rgen's code @done
- check for dominant file names in sample database (can we just stick to .bashrc?)
- look into BigQuery
	- one caveat: includes only repos with an open source license. people who put their private dotfiles online might not bother to add a license
	- "un-notable projects not included" whatever that means? only above a certain number of stars?
- we could sample up to 2000 files per file size via GitHub search, if we sorted first by least recently indexed and then by most recently indexed
- formulate questions and hypotheses
- write paper


repo:
https://github.com/citostyle/shell-alias-analysis/tree/master/extraction

initial questions & preliminary results:
https://docs.google.com/document/d/1KKK0U2MiaHkKcIN9_kISiT2e7pyMAkDGAgGxBSZ5jnQ/edit?usp=sharing

conference:
- MSR 2020
- https://2020.msrconf.org/track/msr-2020-papers
- Deadline: 16. January 2020

background:
- http://www.linfo.org/alias.html
	- good description of the syntax
	- also identifies 5 possible use cases for aliases:
		- reducing amount of typing
		- specifying default options
		- correcting spelling mistakes
		- increasing safety by making commands interactive (alias rm="rm -i")
		- standardizing names across multiple operating systems

Research Questions:
/Users/mcschroeder/Desktop/WhatsApp\ Image\ 2019-11-22\ at\ 15.39.53.jpeg
RQ1) What are the most aliased commands? + anomaly detection in subgraphs
RQ2) a) What are the most common alias names?
b) What is the level of ambiguity? (same names, different commands)
RQ3) a) What's the relationship between cmd length and alias length? b) How much typing are we saving?
RQ4) Is there a co-location relationship between alias/commands of users? [Personas]
RQ5) How many aliases are sequences of cmds?
RQ6) Which args are used together?
RQ7) Are aliases an indication for usability problems?
RQ8) Do aliases leak information (+recover installations)
RQ9) What are use cases of aliases?

sankey (flow) diagram:
- in LaTex: https://tex.stackexchange.com/a/88821

collaborations / connections:
- Daniel Jackson
	- Purposes, Concepts, Misfits, and a Redesign of Git. https://groups.csail.mit.edu/sdg/pubs/2016/gitless-oopsla16.pdf
	- What's wrong with git? a conceptual design analysis. https://groups.csail.mit.edu/sdg/pubs/2013/git-conceptual-onward13.pdf
- script that generates 600 kubernetes aliases: https://github.com/ahmetb/kubectl-aliases/blob/master/generate_aliases.py
- paper: Hey, you have given me too many knobs!
- https://www.chiark.greenend.org.uk/~sgtatham/aliases.html
- https://www.usenix.org/legacy/publications/library/proceedings/lisa93/full_papers/wills.pdf


*skim* these:
- Characterising Deprecated Android APIs: https://dl.acm.org/citation.cfm?doid=3196398.3196419
- Understanding the usage, impact, and adoption of non-OSI approved licenses: https://dl.acm.org/citation.cfm?doid=3196398.3196427
-  A Large-scale Study about Quality and Reproducibility of Jupyter Notebooks: http://www.ic.uff.br/~leomurta/papers/pimentel2019a.pdf
- An empirical analysis of the docker container ecosystem on GitHub (by yours truly): https://peerj.com/preprints/2905/
- Developer Mistakes in Writing Android Manifests: An Empirical Study of Configuration Errors: https://ieeexplore.ieee.org/document/7962352
- An Empirical Study on Android-Related Vulnerabilities https://ieeexplore.ieee.org/document/7962350


Ideas:
- aliases to fiy typos suggest need for auto-correct mechanism in terminals (or at least suggestions after the fact)
- git aliases might point to deficits with git
- classify types of aliases? auto-correct, default-params, shortcut,...

Outline:
	- background:
		- shell alias history
		- dotfiles & storing them in git / sharing them
	- method
		- research questions
		- github api & sampling mechanism
		- database schema



